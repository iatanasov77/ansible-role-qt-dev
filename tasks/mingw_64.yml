---
- name: Add Link to MinGW qmake
  file:
    src: "/home/vagrant/tools/qt-{{ vs_qt_version_full }}/mingw_64/bin/qmake"
    dest: "/usr/bin/qmake-mingw"
    state: link
  become: true
  when: vs_qt_download
  
- name: Create Directory for MinGW QT Compilation
  file:
    path: "{{toolsdir}}/qt-{{ vs_qt_version_full }}/mingw_64"
    state: directory
    mode: '0755'
    
- name: Install MinGW 64
  apt:
    name: ['mingw-w64']
    state: present
  become: true

###########################################
# Install MinGW Dependencies
###########################################

- name: Download and extract DirectX header files
  unarchive:
    src: "http://downloads.vankosoft.org/mingw/0-dxsdk-{{ mingw_directx_version }}.tbz2"
    dest: "/usr/include/"
    remote_src: yes
  become: true

# Previous Variant Of Installation of DirectX SDK
#################################################################################################
# - name: Install a DirectX header files from .deb package
#   apt:
#     deb: "http://downloads.vankosoft.org/mingw/0-MinGW-DirectX-dev-{{ mingw_directx_version }}.deb"
#   become: true
#   register: directx_headers
#   
# - name: Edit dwmapi.h Header File
#   shell: "sed -i '/DWMAPI DwmSetWindowAttribute(HWND, DWORD, LPCVOID, DWORD);/i DWMAPI DwmGetWindowAttribute(HWND, DWORD, PVOID, DWORD);' /usr/include/dxsdk/dwmapi.h"
#   become: true
#   when: directx_headers.changed

  
# Wine is needed to get a list of all DLLs that need to be copied for deployment 
- name: Install Wine
  apt:
    name: ['wine-stable']
    state: present
  become: true
  when: install_wine
  
- name: Copy Vs-List-Dlls script
  template: src={{item}} dest=/usr/local/bin/ mode=0755
  with_items:
    - vs-list-dlls.sh
  become: true
  when: install_wine

# MySql Driver need it
- name: Install MinGW MySql Client
  unarchive:
    src: "http://downloads.vankosoft.org/mingw/0-mingw-w64-x86_64-libmariadbclient-{{ mingw_mysql_client_version }}.pkg.tbz2"
    dest: /usr
    remote_src: yes
  become: true

